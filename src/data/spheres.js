export const spheres = {
  personal: {
    id: 'personal',
    name: 'Personal',
    color: '#FFFFFF',
    emoji: 'üë§',
    hasSubcategories: false
  },
  grow: {
    id: 'grow',
    name: 'Grow',
    color: '#90EE90', // Light green
    emoji: 'üå±',
    hasSubcategories: true,
    subcategories: [
      'Leer un libro a la semana üìö',
      'Tomar un curso online nuevo üíª',
      'Aprender un idioma üåç',
      'Hacer journaling (escribir reflexiones diarias) ‚úçÔ∏è',
      'Escuchar un p√≥dcast educativo üéß',
      'Mejorar tus habilidades de comunicaci√≥n üí¨',
      'Asistir a un taller o conferencia üéì',
      'Definir metas a corto, mediano y largo plazo üéØ',
      'Crear una rutina de ma√±ana productiva ‚òÄÔ∏è',
      'Crear un tablero de visi√≥n (visionboard) üñºÔ∏è',
      'Hacer networking con dos personas a la semana ü§ù',
      'Practicar hablar en p√∫blico üé§',
      'Hacer un plan financiero personal üí∞',
      'Estudiar sobre inteligencia emocional üß†',
      'Hacer un reto de 30 d√≠as (h√°bitos positivos) üìÖ'
    ]
  },
  thrive: {
    id: 'thrive',
    name: 'Thrive',
    color: '#FFD700', // Yellow
    emoji: 'üîù',
    hasSubcategories: true,
    subcategories: {
      'Desarrollo Acad√©mico': [
        'Completar lecturas complementarias semanales - M√°s all√° del syllabus obligatorio üìñ',
        'Formar grupos de estudio interdisciplinarios - Conectar con otras carreras üë•',
        'Asistir a conferencias acad√©micas mensuales - Ampliar perspectiva profesional üéì',
        'Crear un portafolio digital de proyectos - Documentar crecimiento acad√©mico üíº',
        'Hacer una investigaci√≥n personal por ciclo - Profundizar en temas de inter√©s üî¨',
        'Avanzar proyecto de tesis progresivamente - Planificar desde ciclos tempranos üìù'
      ],
      'Preparaci√≥n Profesional': [
        'Conseguir una pr√°ctica pre-profesional relevante - Experiencia real de trabajo üíº',
        'Desarrollar un proyecto de emprendimiento - Aplicar conocimientos te√≥ricos üöÄ',
        'Aprender una habilidad t√©cnica nueva - Excel, programaci√≥n, design thinking üíª',
        'Crear una red de contactos profesionales - LinkedIn y networking eventos ü§ù',
        'Participar en concursos acad√©micos/empresariales - Como INNOVAULIMA üèÜ'
      ],
      'Habilidades Transversales': [
        'Mejorar habilidades de presentaci√≥n - Fundamental para cualquier carrera üé§',
        'Aprender un segundo idioma a nivel conversacional - Ventaja competitiva üåç',
        'Desarrollar pensamiento cr√≠tico - An√°lisis de casos y debates ü§î',
        'Practicar escritura profesional - Informes, propuestas, comunicaci√≥n ‚úçÔ∏è',
        'Estudiar tendencias globales de tu industria - Mantenerse actualizado üìä'
      ]
    }
  },
  connect: {
    id: 'connect',
    name: 'Connect',
    color: '#87CEEB', // Light blue
    emoji: 'üó£Ô∏è',
    hasSubcategories: false
  },
  create: {
    id: 'create',
    name: 'Create',
    color: '#FFA500', // Orange
    emoji: 'üé®',
    hasSubcategories: false
  },
  universidad: {
    id: 'universidad',
    name: 'Universidad',
    color: '#FF8C00', // Dark orange
    emoji: 'üéì',
    hasSubcategories: false
  },
  familia: {
    id: 'familia',
    name: 'Familia',
    color: '#4169E1', // Blue
    emoji: 'üë®‚Äçüë©‚Äçüëß‚Äçüë¶',
    hasSubcategories: true,
    subcategories: {
      'En Casa': [
        'Noche de pel√≠culas en familia üé¨',
        'Tarde de juegos de mesa üé≤',
        'Cocinar pizza casera todos juntos üçï',
        'Karaoke en el sal√≥n üé§',
        'Fortaleza de almohadas y s√°banas üè∞',
        'Noche de talentos familiares üåü',
        'Sesi√≥n de fotos divertidas üì∏',
        'Preparar una receta en familia üç≥',
        'D√≠a de parrilla/barbacoa üçñ',
        'Hacer galletas decoradas üßÅ'
      ],
      'Actividades Culturales': [
        'D√≠a de visita al cine o teatro üé¨',
        'Ver funci√≥n ballet en el teatro ü©∞',
        'Visitar museos interactivos üèõÔ∏è',
        'Conciertos al aire libre üéµ',
        'Ferias y festivales locales üé°',
        'Cuentacuentos en bibliotecas üìö',
        'Mercados de agricultores üõí',
        'Exposiciones de arte üñºÔ∏è',
        'Talleres de artesan√≠a üé®',
        'Espect√°culos de marionetas üé≠'
      ],
      'Al Aire Libre': [
        'Partido de f√∫tbol con los chicos ‚öΩ',
        'Picnic en el campo üß∫',
        'D√≠a de diversi√≥n en la playa üèñÔ∏è',
        'D√≠a de parrilla/barbacoa üî•',
        'Acampada en el patio üèïÔ∏è',
        'B√∫squeda del tesoro üó∫Ô∏è',
        'Volar cometas ü™Å',
        'Montar en bicicleta üö¥',
        'Pescar en un lago üé£',
        'Observar estrellas ‚≠ê'
      ],
      'Aventuras Urbanas': [
        'Ir al parque üèûÔ∏è',
        'Ir por helado üç¶',
        'D√≠a de parque de diversiones üé¢',
        'D√≠a de centro comercial üè¨',
        'Tour en autob√∫s tur√≠stico üöå',
        'Zool√≥gico o acuario local üêÖ',
        'Supermercado üõí',
        'Centros de trampolines ü§∏',
        'Escape rooms familiares üîì',
        'Paseos en barco ‚õµ'
      ],
      'Deportes y Ejercicio': [
        'D√≠a de ir al estadio üèüÔ∏è',
        'Mini golf familiar ‚õ≥',
        'Boliche con canaletas üé≥',
        'Piscina üèä',
        'Tenis o ping pong üèì',
        'Yoga familiar üßò',
        'Carreras de obst√°culos üèÉ',
        'Patinaje sobre hielo ‚õ∏Ô∏è',
        'Senderismo con merienda ü•æ',
        'Clases de baile familiares üíÉ'
      ],
      'Actividades Estacionales': [
        'Recoger frutas en granjas üçé',
        'Laberinto de ma√≠z üåΩ',
        'B√∫squeda de huevos ü•ö',
        'Fogatas con malvaviscos üî•',
        'Recolecci√≥n de hojas üçÅ',
        'Mu√±ecos de nieve ‚õÑ',
        'Decorar para festividades üéÑ',
        'Mercados navide√±os üéÖ',
        'Hacer cometas primaverales ü™Å',
        'Parques acu√°ticos üí¶'
      ],
      'Proyectos Creativos': [
        'Pintar cuadros en lienzo üñºÔ∏è',
        'Hacer pulseras y collares üìø',
        'Construir modelos o puzzles üß©',
        'Charlas o charadas üó£Ô∏è',
        'Scrapbooking con recuerdos ‚úÇÔ∏è',
        'Instrumentos musicales caseros üéµ',
        'Decorar camisetas üëï',
        'Huerto de hierbas arom√°ticas üåø',
        'Construir casas para p√°jaros üè†',
        'Experimentos cient√≠ficos üî¨'
      ],
      'Planes Especiales': [
        'Intercambio de roles por un d√≠a üîÑ',
        'D√≠a sin tecnolog√≠a üìµ',
        'C√°psula del tiempo familiar ‚è∞',
        'B√∫squeda del tesoro nocturna üî¶',
        'Documental familiar casero üé¨',
        'Mini vacaciones de fin de semana üèñÔ∏è',
        'Crear tradiciones √∫nicas üéØ',
        'Jardiner√≠a familiar üå±',
        'Crear √°lbum digital familiar üì±',
        'Granjas educativas üêÑ'
      ]
    }
  },
  trabajo: {
    id: 'trabajo',
    name: 'Trabajo',
    color: '#808080', // Gray
    emoji: 'üíº',
    hasSubcategories: false
  },
  pareja: {
    id: 'pareja',
    name: 'Pareja',
    color: '#FF0000', // Red
    emoji: 'üíï',
    hasSubcategories: false
  },
  gym: {
    id: 'gym',
    name: 'Gym',
    color: '#00FF00', // Green
    emoji: 'üí™',
    hasSubcategories: false
  },
  bienestar: {
    id: 'bienestar',
    name: 'Bienestar',
    color: '#808080', // Gray
    emoji: 'üßò',
    hasSubcategories: false
  },
  deporte: {
    id: 'deporte',
    name: 'Deporte',
    color: '#20B2AA', // Teal
    emoji: 'üèÑ‚Äç‚ôÇÔ∏è',
    hasSubcategories: true,
    subcategories: [
      'F√∫tbol ‚öΩÔ∏è',
      'Tenis ü•é',
      'Nataci√≥n üèä‚Äç‚ôÇÔ∏è',
      'Surf üèÑ‚Äç‚ôÇÔ∏èüåä',
      'Paddle üèì',
      'Equitaci√≥n üèá',
      'Muay Thai ü•ä',
      'Voleibol üèê',
      'B√°squetbol üèÄ',
      'Rugby üèâ',
      'Golf ‚õ≥Ô∏èüèåÔ∏è‚Äç‚ôÄÔ∏è',
      'Polo ü•Ö',
      'Hockey üèë',
      'Ballet ü©∞',
      'Gimnasia ü§∏',
      'Karate ü•ã'
    ]
  },
  viajes: {
    id: 'viajes',
    name: 'Viajes',
    color: '#FFA500', // Orange
    emoji: '‚úàÔ∏è',
    hasSubcategories: false
  },
  social: {
    id: 'social',
    name: 'Social (Friends)',
    color: '#FF8C00', // Dark orange
    emoji: 'üë•',
    hasSubcategories: false
  }
}

// Funci√≥n para obtener todas las esferas como array
export const getSpheresArray = () => {
  return Object.values(spheres)
}

// Funci√≥n para obtener una esfera por ID
export const getSphereById = (id) => {
  return spheres[id]
}

// Funci√≥n para obtener esferas con subcategor√≠as
export const getSpheresWithSubcategories = () => {
  return Object.values(spheres).filter(sphere => sphere.hasSubcategories)
}

// Funci√≥n para obtener subcategor√≠as de una esfera
export const getSphereSubcategories = (sphereId, customActivities = {}) => {
  const sphere = spheres[sphereId]
  if (!sphere || !sphere.hasSubcategories) return []
  
  let baseSubcategories = []
  if (Array.isArray(sphere.subcategories)) {
    baseSubcategories = sphere.subcategories
  } else if (typeof sphere.subcategories === 'object') {
    baseSubcategories = Object.keys(sphere.subcategories)
  }
  
  // Agregar actividades personalizadas simples (arrays)
  const customSimple = customActivities[sphereId]
  if (Array.isArray(customSimple)) {
    baseSubcategories = [...baseSubcategories, ...customSimple]
  }
  
  // Agregar categor√≠as personalizadas (objetos)
  if (customSimple && typeof customSimple === 'object' && !Array.isArray(customSimple)) {
    const customCategories = Object.keys(customSimple)
    baseSubcategories = [...baseSubcategories, ...customCategories]
  }
  
  console.log('Final subcategories for', sphereId, ':', baseSubcategories)
  return baseSubcategories
}

// Funci√≥n para obtener subcategor√≠as anidadas de una esfera
export const getSphereNestedSubcategories = (sphereId, customActivities = {}) => {
  const sphere = spheres[sphereId]
  if (!sphere || !sphere.hasSubcategories) return {}
  
  let baseSubcategories = {}
  if (typeof sphere.subcategories === 'object' && !Array.isArray(sphere.subcategories)) {
    baseSubcategories = { ...sphere.subcategories }
  }
  
  console.log('Base subcategories for', sphereId, ':', baseSubcategories)
  console.log('Custom activities for', sphereId, ':', customActivities[sphereId])
  
  // Agregar actividades personalizadas por categor√≠a
  const customByCategory = customActivities[sphereId]
  if (customByCategory && typeof customByCategory === 'object' && !Array.isArray(customByCategory)) {
    console.log('Processing custom categories:', Object.keys(customByCategory))
    Object.keys(customByCategory).forEach(category => {
      if (!baseSubcategories[category]) {
        baseSubcategories[category] = []
        console.log('Created new category:', category)
      }
      baseSubcategories[category] = [...baseSubcategories[category], ...customByCategory[category]]
      console.log('Updated category', category, 'with activities:', baseSubcategories[category])
    })
  }
  
  console.log('Final subcategories:', baseSubcategories)
  return baseSubcategories
}
